# APK


ifeq ($(CI),)
export PACKAGER_PRIVKEY_DIR ?= /packages/apk
export PACKAGER ?= buildtest@cloudposse.com
export PACKAGER_PRIVKEY ?= $(PACKAGER_PRIVKEY_DIR)/$(PACKAGER).rsa
export PACKAGER_PUBKEY ?= $(APK_PACKAGES_PATH)/$(PACKAGER).rsa.pub
export PACKAGER_PUBKEY_INSTALLED ?= /etc/apk/keys/$(PACKAGER).rsa.pub

$(PACKAGER_PRIVKEY) localkey:
	openssl genrsa -out $(PACKAGER_PRIVKEY) 2048

$(PACKAGER_PUBKEY): $(PACKAGER_PRIVKEY)
	mkdir -p $(APK_PACKAGES_PATH)
	chmod 777 $(APK_PACKAGES_PATH)
	openssl rsa -in $(PACKAGER_PRIVKEY) -pubout > $(PACKAGER_PUBKEY)

$(PACKAGER_PUBKEY_INSTALLED): $(PACKAGER_PUBKEY)
	chmod 666 $(PACKAGER_PRIVKEY)  $(PACKAGER_PUBKEY)
	cp  $(PACKAGER_PUBKEY) $(PACKAGER_PUBKEY_INSTALLED)

endif

export APK_PACKAGE_ENABLED ?= true
export APK_TEMPLATE_PATH ?= ../../apk/templates/
export APK_BUILD_TEMPLATE ?= APKBUILD.github-binary
export APK_PACKAGES_PATH ?= /tmp/packages
export APK_TMP_DIR := $(realpath $(shell mktemp -d ../../tmp/build.XXXXXX))
export APK_PACKAGE_NAME ?= $(PACKAGE_NAME)
export APK_PACKAGE ?= $(APK_PACKAGES_PATH)/vendor/x86_64/$(APK_PACKAGE_NAME)-$(PACKAGE_VERSION)-r$(PACKAGE_RELEASE).apk
export SRCDEST := $(APK_TMP_DIR)/cache

apk/prepare::
	@apk version --check --quiet $(PACKAGE_VERSION) || (echo "$(PACKAGE_VERSION) is not a valid version for alpine linux"; exit 1)
	mkdir -p $(APK_PACKAGES_PATH) $(APK_TMP_DIR) $(SRCDEST)
	chmod 777 $(APK_PACKAGES_PATH) $(APK_TMP_DIR)
	cp -a $(APK_TEMPLATE_PATH)/$(APK_BUILD_TEMPLATE) $(APK_TMP_DIR)/APKBUILD
	cp -a . "$(APK_TMP_DIR)"
	chsh -s /bin/sh nobody
	chown nobody -R $(APK_TMP_DIR)
	chmod 777 $(SRCDEST)

apk/checksum:
	cd $(APK_TMP_DIR) && \
		sudo -E -H -u nobody abuild checksum

apk/build:
	addgroup nobody abuild
	cd $(APK_TMP_DIR) && \
		sudo -E -H -u nobody abuild -c -r -P $(APK_PACKAGES_PATH)

apk/testinstall:
	@echo '* Verify package can be installed:'
	apk add --virtual buildtest $(APK_PACKAGE)
	@echo '* Verify package can be uninstalled:'
	apk del buildtest

apk/clean:
	@find $(APK_PACKAGES_PATH) -type f -name APKINDEX.tar.gz -delete
	apk del buildtest || true
	rm -rf $(APK_TMP_DIR) 
	mkdir -p $(APK_TMP_DIR)

apk/reset:
	apk del buildtest || true
	rm -rf $(APK_PACKAGE)

.PHONY : apk
ifneq ($(PACKAGE_ENABLED),true)
apk:
	@echo All packages disabled for $(PACKAGE_NAME).
	@exit 0
else ifeq ($(APK_PACKAGE_ENABLED),true)
apk: $(PACKAGER_PRIVKEY) $(PACKAGER_PUBKEY_INSTALLED) $(APK_PACKAGE)
	@echo Wrote $(APK_PACKAGE)
	@exit 0
else
apk:
	@echo $(PACKAGE_NAME) is disabled for alpine $(shell cat /etc/alpine-release 2>/dev/null).
	@exit 0
endif

# Rebuild the `.apk` when it's older than the Makefile, VERSION, or RELEASE files
$(APK_PACKAGE): Makefile VERSION RELEASE $(wildcard *.post-install) $(wildcard *.post-deinstall)
	@echo "Building $@"
	ls -l $@ Makefile VERSION RELEASE || true
	$(MAKE) info apk/prepare apk/checksum apk/build apk/testinstall apk/clean

package/prepare::
	@exit 0

clean::
	rm -f $(APK_PACKAGE)
